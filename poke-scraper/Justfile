zip-filename := "handlers.zip"
tools-dir := justfile_directory() + "/bin"
golangci-lint-version := "v2.3.0"
golangci-lint-install-url := "https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh"

build:
    mkdir -p out
    GOOS=linux GOARCH=arm64 go build -C src -o "{{justfile_directory()}}/out/bootstrap" -tags lambda.norpc

[working-directory: "out"]
zip: build
    zip "{{zip-filename}}" bootstrap

clean:
    rm -rf "{{justfile_directory()}}/out"

[working-directory: "infra"]
tf-apply: clean zip
    tofu init
    tofu apply -auto-approve -var "zip_path={{justfile_directory()}}/out/{{zip-filename}}"

[working-directory: "infra"]
tf-destroy:
    #!/bin/bash -e
    tmp=$(mktemp)
    tofu destroy -auto-approve -var "zip_path=$tmp"
    rm "$tmp"

[working-directory: "infra"]
tf-fmt:
    tofu fmt

go-tools:
    mkdir -p "{{tools-dir}}"
    GOBIN="{{tools-dir}}" go install golang.org/x/tools/cmd/goimports@latest
    GOBIN="{{tools-dir}}" go install github.com/segmentio/golines@latest
    curl -sSfL "{{golangci-lint-install-url}}" | sh -s -- -b "{{tools-dir}}" "{{golangci-lint-version}}"

go-qual: go-tools
    {{tools-dir}}/goimports -w "{{justfile_directory()}}/src"
    {{tools-dir}}/golines -w "{{justfile_directory()}}/src"
    {{tools-dir}}/golangci-lint run "{{justfile_directory()}}/src"
